{"ast":null,"code":"import _objectSpread from \"/Users/levi/Desktop/newstart/react/tiny-app/http-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/levi/Desktop/newstart/react/tiny-app/http-app/src/App.js\";\nimport React, { Component } from \"react\";\nimport http from \"./services/httpService\";\nimport \"./App.css\";\nconst apiEndpoint = \"http://jsonplaceholder.typicode.com/posts\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      posts: []\n    };\n\n    this.handleAdd = async () => {\n      const obj = {\n        title: \"a\",\n        body: \"b\"\n      };\n\n      const _ref = await http.post(apiEndpoint, obj),\n            post = _ref.data;\n\n      const posts = [post, ...this.state.posts];\n      this.setState({\n        posts\n      });\n    };\n\n    this.handleUpdate = async post => {\n      post.title = \"UPDATED\";\n      const posts = [...this.state.posts];\n      const index = posts.indexOf(post);\n      posts[index] = _objectSpread({}, post);\n      this.setState({\n        posts\n      });\n      await http.put(apiEndpoint + \"/\" + post.id, post);\n    };\n\n    this.handleDelete = async post => {\n      const originalPosts = this.state.posts;\n      const posts = this.state.posts.filter(p => p.id !== post.id);\n      this.setState({\n        posts\n      });\n\n      try {\n        await http.delete(\"s\" + apiEndpoint + \"/\" + post.id);\n      } catch (ex) {\n        console.log(\"HANDLE DELETE\");\n\n        if (ex.response && ex.response.status === 404) {\n          alert(\"The post has already been deleted.\");\n        }\n\n        this.setState({\n          post: originalPosts\n        });\n      }\n    };\n  }\n\n  //get to data from backend or database\n  async componentDidMount() {\n    const _ref2 = await http.get(apiEndpoint),\n          posts = _ref2.data;\n\n    this.setState({\n      posts\n    });\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: this.handleAdd,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Add\"), React.createElement(\"table\", {\n      className: \"table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Title\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Update\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Delete\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, this.state.posts.map(post => React.createElement(\"tr\", {\n      key: post.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, post.title), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-info btn-sm\",\n      onClick: () => this.handleUpdate(post),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Update\")), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-danger btn-sm\",\n      onClick: () => this.handleDelete(post),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Delete\")))))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/levi/Desktop/newstart/react/tiny-app/http-app/src/App.js"],"names":["React","Component","http","apiEndpoint","App","state","posts","handleAdd","obj","title","body","post","data","setState","handleUpdate","index","indexOf","put","id","handleDelete","originalPosts","filter","p","delete","ex","console","log","response","status","alert","componentDidMount","get","render","map"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAO,WAAP;AAEA,MAAMC,WAAW,GAAG,2CAApB;;AAEA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BI,KAD0B,GAClB;AACNC,MAAAA,KAAK,EAAE;AADD,KADkB;;AAAA,SAW1BC,SAX0B,GAWd,YAAY;AACtB,YAAMC,GAAG,GAAG;AAAEC,QAAAA,KAAK,EAAE,GAAT;AAAcC,QAAAA,IAAI,EAAE;AAApB,OAAZ;;AADsB,mBAEC,MAAMR,IAAI,CAACS,IAAL,CAAUR,WAAV,EAAuBK,GAAvB,CAFP;AAAA,YAERG,IAFQ,QAEdC,IAFc;;AAGtB,YAAMN,KAAK,GAAG,CAACK,IAAD,EAAO,GAAG,KAAKN,KAAL,CAAWC,KAArB,CAAd;AACA,WAAKO,QAAL,CAAc;AAAEP,QAAAA;AAAF,OAAd;AACD,KAhByB;;AAAA,SAkB1BQ,YAlB0B,GAkBX,MAAMH,IAAN,IAAc;AAC3BA,MAAAA,IAAI,CAACF,KAAL,GAAa,SAAb;AACA,YAAMH,KAAK,GAAG,CAAC,GAAG,KAAKD,KAAL,CAAWC,KAAf,CAAd;AACA,YAAMS,KAAK,GAAGT,KAAK,CAACU,OAAN,CAAcL,IAAd,CAAd;AACAL,MAAAA,KAAK,CAACS,KAAD,CAAL,qBAAoBJ,IAApB;AACA,WAAKE,QAAL,CAAc;AAAEP,QAAAA;AAAF,OAAd;AAEA,YAAMJ,IAAI,CAACe,GAAL,CAASd,WAAW,GAAG,GAAd,GAAoBQ,IAAI,CAACO,EAAlC,EAAsCP,IAAtC,CAAN;AACD,KA1ByB;;AAAA,SA4B1BQ,YA5B0B,GA4BX,MAAMR,IAAN,IAAc;AAC3B,YAAMS,aAAa,GAAG,KAAKf,KAAL,CAAWC,KAAjC;AACA,YAAMA,KAAK,GAAG,KAAKD,KAAL,CAAWC,KAAX,CAAiBe,MAAjB,CAAwBC,CAAC,IAAIA,CAAC,CAACJ,EAAF,KAASP,IAAI,CAACO,EAA3C,CAAd;AACA,WAAKL,QAAL,CAAc;AAAEP,QAAAA;AAAF,OAAd;;AAEA,UAAI;AACF,cAAMJ,IAAI,CAACqB,MAAL,CAAY,MAAMpB,WAAN,GAAoB,GAApB,GAA0BQ,IAAI,CAACO,EAA3C,CAAN;AACD,OAFD,CAEE,OAAOM,EAAP,EAAW;AACXC,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;;AACA,YAAIF,EAAE,CAACG,QAAH,IAAeH,EAAE,CAACG,QAAH,CAAYC,MAAZ,KAAuB,GAA1C,EAA+C;AAC7CC,UAAAA,KAAK,CAAC,oCAAD,CAAL;AACD;;AACD,aAAKhB,QAAL,CAAc;AAAEF,UAAAA,IAAI,EAAES;AAAR,SAAd;AACD;AACF,KA1CyB;AAAA;;AAK1B;AACA,QAAMU,iBAAN,GAA0B;AAAA,kBACA,MAAM5B,IAAI,CAAC6B,GAAL,CAAS5B,WAAT,CADN;AAAA,UACVG,KADU,SAChBM,IADgB;;AAExB,SAAKC,QAAL,CAAc;AAAEP,MAAAA;AAAF,KAAd;AACD;;AAmCD0B,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,SAAS,EAAC,iBAAlB;AAAoC,MAAA,OAAO,EAAE,KAAKzB,SAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAIE;AAAO,MAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,CADF,CADF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKF,KAAL,CAAWC,KAAX,CAAiB2B,GAAjB,CAAqBtB,IAAI,IACxB;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACO,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKP,IAAI,CAACF,KAAV,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,SAAS,EAAC,qBADZ;AAEE,MAAA,OAAO,EAAE,MAAM,KAAKK,YAAL,CAAkBH,IAAlB,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CAFF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,SAAS,EAAC,uBADZ;AAEE,MAAA,OAAO,EAAE,MAAM,KAAKQ,YAAL,CAAkBR,IAAlB,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CAVF,CADD,CADH,CARF,CAJF,CADF;AAuCD;;AApFyB;;AAuF5B,eAAeP,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport http from \"./services/httpService\";\nimport \"./App.css\";\n\nconst apiEndpoint = \"http://jsonplaceholder.typicode.com/posts\";\n\nclass App extends Component {\n  state = {\n    posts: []\n  };\n\n  //get to data from backend or database\n  async componentDidMount() {\n    const { data: posts } = await http.get(apiEndpoint);\n    this.setState({ posts });\n  }\n\n  handleAdd = async () => {\n    const obj = { title: \"a\", body: \"b\" };\n    const { data: post } = await http.post(apiEndpoint, obj);\n    const posts = [post, ...this.state.posts];\n    this.setState({ posts });\n  };\n\n  handleUpdate = async post => {\n    post.title = \"UPDATED\";\n    const posts = [...this.state.posts];\n    const index = posts.indexOf(post);\n    posts[index] = { ...post };\n    this.setState({ posts });\n\n    await http.put(apiEndpoint + \"/\" + post.id, post);\n  };\n\n  handleDelete = async post => {\n    const originalPosts = this.state.posts;\n    const posts = this.state.posts.filter(p => p.id !== post.id);\n    this.setState({ posts });\n\n    try {\n      await http.delete(\"s\" + apiEndpoint + \"/\" + post.id);\n    } catch (ex) {\n      console.log(\"HANDLE DELETE\");\n      if (ex.response && ex.response.status === 404) {\n        alert(\"The post has already been deleted.\");\n      }\n      this.setState({ post: originalPosts });\n    }\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <button className=\"btn btn-primary\" onClick={this.handleAdd}>\n          Add\n        </button>\n        <table className=\"table\">\n          <thead>\n            <tr>\n              <th>Title</th>\n              <th>Update</th>\n              <th>Delete</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.state.posts.map(post => (\n              <tr key={post.id}>\n                <td>{post.title}</td>\n                <td>\n                  <button\n                    className=\"btn btn-info btn-sm\"\n                    onClick={() => this.handleUpdate(post)}\n                  >\n                    Update\n                  </button>\n                </td>\n                <td>\n                  <button\n                    className=\"btn btn-danger btn-sm\"\n                    onClick={() => this.handleDelete(post)}\n                  >\n                    Delete\n                  </button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}